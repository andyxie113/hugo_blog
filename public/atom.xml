<?xml version="1.0" encoding="utf-8"?>


<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title type="text">Hugo Theme MemE</title>
    <subtitle type="html">MemE is a powerful and highly customizable GoHugo theme for personal blogs.</subtitle>
    <updated>2022-05-20T18:04:43&#43;08:00</updated>
    <id>https://example.com/</id>
    <link rel="alternate" type="text/html" href="https://example.com/" />
    <link rel="self" type="application/atom&#43;xml" href="https://example.com/atom.xml" />
    <author>
            <name>雨吁</name>
            <uri>https://example.com/</uri>
            
                <email>605370591@qq.com</email>
            </author>
    <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</rights>
    <generator uri="https://gohugo.io/" version="0.98.0">Hugo</generator>
        <entry>
            <title type="text">RocketMQ出现system busy、broker busy原因分析与解决</title>
            <link rel="alternate" type="text/html" href="https://example.com/posts/rocketmq_1/" />
            <id>https://example.com/posts/rocketmq_1/</id>
            <updated>2018-09-26T00:00:00&#43;00:00</updated>
            <published>2018-09-18T00:00:00&#43;00:00</published>
            <author>
                    <name>雨吁</name>
                    <uri>https://xiewen.xyz/</uri>
                    <email>605370591@qq.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</rights><summary type="html">RocketMQ使用者反馈在消息发送过程中偶尔会出现如下错误信息</summary>
            
                <content type="html">&lt;p&gt;RocketMQ使用者反馈在消息发送过程中偶尔会出现如下错误信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[REJECTREQUEST]system busy, start flow control for a while&lt;/li&gt;
&lt;li&gt;[PC_SYNCHRONIZED]broker busy, start flow control for a while&lt;/li&gt;
&lt;li&gt;[PCBUSY_CLEAN_QUEUE]broker busy, start flow control for a while, period in queue: %sms, size of queue: %d&lt;/li&gt;
&lt;li&gt;too many requests and system thread pool busy, RejectedExecutionException&lt;/li&gt;
&lt;li&gt;[TIMEOUT_CLEAN_QUEUE]broker busy&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;原因&#34;&gt;原因：&lt;/h4&gt;
&lt;p&gt;消息发送时抛出system busy、broker busy错误，其本质是系统的PageCache繁忙，通俗一点讲就是向PageCache追加消息时，单个消息发送占用的时间超过1s了。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;osPageCacheBusyTimeOutMills + broker busy&lt;/p&gt;
&lt;p&gt;pagecache压力较大&lt;/p&gt;
&lt;p&gt;判断pagecache是否忙的依据就是在写入消息时，在向内存追加消息时加锁的时间，默认的判断标准是加锁时间超过1s，就认为是pagecache压力大，向客户端抛出相关的错误日志。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;优化: 理论上可以把osPageCacheBusyTimeOutMills的值调大一点，但是不推荐，特别是对时效敏感的系统&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;sendThreadPoolQueueCapacity + system busy&lt;/p&gt;
&lt;p&gt;发送线程池挤压的拒绝策略&lt;/p&gt;
&lt;p&gt;简单说所有到达Broker的请求会被转入到一个线程继续，这个线程的长度由sendThreadPoolQueueCapacity决定，默认长度为10000，超过就报system busy&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;优化&lt;/strong&gt;：理论上可以增加该参数防止报异常，但是不建议，治标不治本&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;brokerFastFailureEnable + broker busy&lt;/p&gt;
&lt;p&gt;Broker端快速失败策略&lt;/p&gt;
&lt;p&gt;brokerFastFailureEnable默认为true，表示开启快速失败策略&lt;/p&gt;
&lt;p&gt;如果brokerFastFailureEnable=true,当如果发现Broker服务器的PageCache繁忙，如果发现sendThreadPoolQueue队列中不为空，表示还有排队的发送请求在排队等待执行，则直接结束等待，返回broker busy，&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;优化方向&#34;&gt;优化方向：&lt;/h4&gt;
&lt;h5 id=&#34;方向一&#34;&gt;方向一：&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;当Broker服务器自身比较忙的时候，快速失败，并且在接下来的一段时间内会规避该Broker，这样该Broker恢复提供了时间保证，Broker本身的架构是支持分布式水平扩容的，增加Topic的队列数，降低单台Broker服务器的负载，从而避免出现PageCache。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;与之扩容对应的，也可以通过对原有Broker进行升配，例如增加内存、把机械盘换成SSD，但这种情况，通常需要重启Broekr服务器，没有扩容来的方便&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;方向二&#34;&gt;方向二：&lt;/h5&gt;
&lt;p&gt;在broker配置文件中将transientStorePoolEnable设置为true。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;依据： 启用“读写”分离，消息发送时消息先追加到DirectByteBuffer(堆外内存)中，然后在异步刷盘机制下，会将DirectByteBuffer中的内容提交到PageCache，然后刷写到磁盘。消息拉取时，直接从PageCache中拉取，实现了读写分离，减轻了PageCaceh的压力，能从根本上解决该问题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;缺点： 会增加数据丢失的可能性，如果Broker JVM进程异常退出，提交到PageCache中的消息是不会丢失的，但存在堆外内存(DirectByteBuffer)中但还未提交到PageCache中的这部分消息，将会丢失。但通常情况下，RocketMQ进程退出的可能性不大。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://example.com/categories/rocketmq/" term="rocketmq" label="rocketmq" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://example.com/tags/rocketmq/" term="rocketmq" label="rocketmq" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">我的第一篇博客</title>
            <link rel="alternate" type="text/html" href="https://example.com/posts/my_first/" />
            <id>https://example.com/posts/my_first/</id>
            <updated>2018-09-26T00:00:00&#43;00:00</updated>
            <published>2018-09-18T00:00:00&#43;00:00</published>
            <author>
                    <name>雨吁</name>
                    <uri>https://xiewen.xyz/</uri>
                    <email>605370591@qq.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</rights><summary type="html">这是描述信息</summary>
            
                <content type="html">&lt;p&gt;这里是Markdown 正文&lt;/p&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://example.com/categories/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%88%86%E7%B1%BB/" term="我的博客分类" label="我的博客分类" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://example.com/tags/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%A0%87%E7%AD%BE/" term="我的博客标签" label="我的博客标签" />
                            
                        
                    
                
            
        </entry>
    
</feed>
